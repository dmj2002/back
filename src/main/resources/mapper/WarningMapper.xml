<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hust.ewsystem.mapper.WarningMapper">

    <!-- 结果映射，根据你的 Warning 类属性进行调整 -->
    <resultMap id="WarningResultMap" type="com.hust.ewsystem.DTO.WarningsDTO">
        <id column="warning_id" property="warningId"/>
        <result column="warning_level" property="warningLevel"/>
        <result column="warning_status" property="warningStatus"/>
        <result column="start_time" property="startTime"/>
        <result column="end_time" property="endTime"/>
        <result column="handler_id" property="handlerId"/>
        <result column="handle_time" property="handleTime"/>
        <result column="warning_description" property="warningDescription"/>
        <result column="transferred_to_work_order" property="transferredToWorkOrder"/>
        <result column="model_id" property="modelId"/>
        <result column="task_id" property="taskId"/>
        <result column="valid" property="valid"/>
        <result column="repetition" property="repetition"/>
        <result column="combined_name" property="farmTurbineName"/>
    </resultMap>

    <resultMap id="ModulePointResultMap" type="com.hust.ewsystem.VO.ModulePointVO">
        <result property="moduleId" column="module_id"/>
        <collection property="pointIds" ofType="java.lang.Integer">
            <result column="stand_point_id" />
        </collection>
    </resultMap>


    <!-- 根据 Warning 对象列表中的 modelId 查询对应的 WarningsVO -->
    <select id="getWarningsByModelId" resultType="com.hust.ewsystem.VO.WarningsVO">
        SELECT w.*,t.turbine_name,t.turbine_id
        FROM warnings w
        LEFT JOIN models m ON w.model_id = m.model_id
        LEFT JOIN wind_turbine t ON m.turbine_id = t.turbine_id
        WHERE w.warning_id IN
        <foreach item="warning" index="index" collection="records" open="(" separator="," close=")">
            #{warning.warningId}
        </foreach>
    </select>

    <select id="getTurbineIdByWarningId" resultType="Integer">
        SELECT m.turbine_id
        FROM warnings w
        LEFT JOIN models m ON w.model_id = m.model_id
        WHERE w.warning_id = #{warningId}
    </select>
    
    <select id="selectWarningsPage" resultMap="WarningResultMap">
        SELECT w.*, CONCAT(wf.wind_farm_name, '-', wt.turbine_name) AS combined_name
        FROM warnings w
        JOIN models m ON w.model_id = m.model_id
        JOIN wind_turbine wt ON m.turbine_id = wt.turbine_id
        JOIN wind_farm wf ON wt.wind_farm_id = wf.wind_farm_id
        <where>
            <if test="param.windFarmId != null">
                wt.wind_farm_id = #{param.windFarmId}
            </if>
            <if test="param.startTime != null">
                AND w.start_time &gt;= #{param.startTime}
            </if>
            <if test="param.endTime != null">
                AND w.end_time &lt;= #{param.endTime}
            </if>
        </where>
        ORDER BY w.start_time DESC
    </select>

    <select id="selectWarningsNoPage" resultMap="WarningResultMap">
        SELECT w.*, CONCAT(wf.wind_farm_name, '-', wt.turbine_name) AS combined_name
        FROM warnings w
        JOIN models m ON w.model_id = m.model_id
        JOIN wind_turbine wt ON m.turbine_id = wt.turbine_id
        JOIN wind_farm wf ON wt.wind_farm_id = wf.wind_farm_id
        <where>
            <if test="param.windFarmId != null">
                wt.wind_farm_id = #{param.windFarmId}
            </if>
            <if test="param.turbineId != null">
                AND m.turbine_id = #{param.turbineId}
            </if>
            <if test="param.startTime != null">
                AND w.start_time &gt;= #{param.startTime}
            </if>
            <if test="param.endTime != null">
                AND w.end_time &lt;= #{param.endTime}
            </if>
            <if test="param.warningDescription != null">
                AND w.warning_description = #{param.warningDescription}
            </if>
            AND w.warning_status != 4
        </where>
        ORDER BY w.start_time DESC
    </select>

    <select id="selectWarningsDesc" resultMap = "WarningResultMap">
        SELECT w.warning_description, CONCAT(wf.wind_farm_name, '-', wt.turbine_name) AS combined_name
        FROM warnings w
        JOIN models m ON w.model_id = m.model_id
        JOIN wind_turbine wt ON m.turbine_id = wt.turbine_id
        JOIN wind_farm wf ON wt.wind_farm_id = wf.wind_farm_id
        <where>
            <if test="param.windFarmId != null">
                wt.wind_farm_id = #{param.windFarmId}
            </if>
            <if test="param.turbineId != null">
                AND m.turbine_id = #{param.turbineId}
            </if>
            <if test="param.startTime != null">
                AND w.start_time &gt;= #{param.startTime}
            </if>
            <if test="param.endTime != null">
                AND w.end_time &lt;= #{param.endTime}
            </if>
            AND w.warning_status != 4
        </where>
        GROUP BY w.warning_description, wf.wind_farm_name, wt.turbine_name
    </select>

    <select id="getWarningsCount" resultType="int">
        select COUNT(0) AS warning_count
        from warnings w left join models m on w.model_id = m.model_id
        where m.turbine_id = #{param.turbineId} and w.model_id = #{param.modelId} and w.warning_level =#{param.warningLevel} and w.warning_status IN (0,1,3)
        <if test="param.startTime != null">
            AND w.start_time &gt;= #{param.startTime}
        </if>
        <if test="param.endTime != null">
            AND w.end_time &lt;= #{param.endTime}
        </if>
    </select>

    <select id="getCount" resultType="com.hust.ewsystem.DTO.WarnStatusDTO">
        SELECT
            COUNT(CASE WHEN w.warning_status = 0 AND w.warning_level = 1 THEN 1 ELSE NULL END) AS warningLevel1waitDone,
            COUNT(CASE WHEN w.warning_status = 0 AND w.warning_level = 2 THEN 1 ELSE NULL END) AS warningLevel2waitDone,
            COUNT(CASE WHEN w.warning_status = 1 AND w.warning_level = 1 THEN 1 ELSE NULL END) AS warningLevel1waitHangUp,
            COUNT(CASE WHEN w.warning_status = 1 AND w.warning_level = 2 THEN 1 ELSE NULL END) AS warningLevel2waitHangUp,
            COUNT(CASE WHEN w.warning_status = 3 AND w.warning_level = 1 THEN 1 ELSE NULL END) AS warningLevel1waitCloseWait,
            COUNT(CASE WHEN w.warning_status = 3 AND w.warning_level = 2 THEN 1 ELSE NULL END) AS warningLevel2waitCloseWait
        FROM warnings w where model_id = #{modelId}
        <if test="startTime != null">
            AND w.start_time &gt;= #{startTime}
        </if>
        <if test="endTime != null">
            AND w.end_time &lt;= #{endTime}
        </if>
    </select>

    <select id="getTurbineIdCountByWarningIdList" resultType="Integer">
        SELECT DISTINCT m.turbine_id
        FROM warnings w
        LEFT JOIN models m ON w.model_id = m.model_id
        WHERE w.warning_id IN
        <foreach item="warningId" index="index" collection="records" open="(" separator="," close=")">
            #{warningId}
        </foreach>
    </select>

    <select id="getModuleIdByWarningId" resultMap="ModulePointResultMap">
        SELECT asr.stand_point_id, a.module_id
        FROM warnings w
        JOIN models m ON w.model_id = m.model_id
        JOIN algorithms a ON m.algorithm_id = a.algorithm_id
        JOIN algorithms_stand_relate asr ON a.algorithm_id = asr.algorithm_id
        WHERE w.warning_id = #{warningId}
    </select>

    
    <update id="warnHandle" parameterType="com.hust.ewsystem.DTO.WarnHandleDTO">
        update warnings w
        <set>
            <if test="param.warnLevel!=null">
                w.warning_level = #{param.warnLevel},
            </if>
            <if test="param.warnStatus!=null">
                w.warning_status = #{param.warnStatus}
            </if>
        </set>
        where w.warning_id in
        <foreach collection="param.warnIdList" item="warnId" open="(" separator="," close=")">
            #{warnId}
        </foreach>
    </update>
</mapper>